----------------------------- EASY --------------------------------
// LeetCode
problem: 219. Contains Duplicate II  (using object as map)
problem: 88. Merge Sorted Array (multiple pointers)
problem: 231. Power of Two (using loop / using Recursion)
problem: 125. Valid Palindrome 
problem: 344. Reverse String modifying the input array in-place (Using Two pointers / for loop )
problem: 412. Fizz Buzz(uisng loop & if-else)
problem: 704. Binary Search (using Loop / using Recursion) (concept code related question)
problem: 268. Missing Number(using formula-> missingNumber = sumConsecutive-sum)
problem: 2114. Maximum Number of Words Found in Sentences(using nested for loop)
problem: 1672. Richest Customer Wealth(using nested for loop)
problem: 202. Happy Number (using "Cycle Detection" algorithm)
problem: 1. Two Sum(Using Map - sum of pair equal to target like CZ)
problem: 217. Contains Duplicate (Using Map)
problem: 26. Remove Duplicates from Sorted Array(Using Two pointers with for Loop)
problem: 2379. Minimum Recolors to Get K Consecutive Black Blocks(Using Sliding window variable length Without Map)
problem: 13. Roman to Integer(Using Map(hardcoded set) / Using object)
problem: 20. Valid Parentheses (Using Stack + Map)
problem: 349. Intersection of Two Arrays(Using Map / Using includes + indexOf)
problem: 350. Intersection of Two Arrays II (Using Map)
problem: 121. Best Time to Buy and Sell Stock(Using DP)
problem: 876. Middle of the Linked List (Linked List using slow/fast pointers)
problem: 566. Reshape the Matrix(Using Matrix concept)
problem: 118. Pascal's Triangle
problem: 141. Linked List Cycle (Using Cycle Detection Algorithm)
problem: 203. Remove Linked List Elements (Using Recursion / Using while Loop)
problem: 206. Reverse Linked List (using Recursion / Using pointers & while Loop)
problem: 21. Merge Two Sorted Lists (Using Recursion / Using while Loop)
problem: 387. First Unique Character in a String (Using Map)
problem: 242. Valid Anagram (Using Map)
problem: 383. Ransom Note (Using Map)
problem: 232. Implement Queue using Stacks (Using Two Stack)
problem: 225. Implement Stack using Queues (Using Two Queues)
problem: 844. Backspace String Compare (Using Stack)
problem: 496. Next Greater Element I (Using Stack or Map)[variant for 530 medium]
problem: 66. Plus One (Maths)
problem: 70. Climbing Stairs (Using DP - Bottom - Top Approach)
problem: 509. Fibonacci Number (Using DP)
problem: 144. Binary Tree Preorder Traversal (Using Recursion-DFS)
problem: 145. Binary Tree Postorder Traversal (Using Recursion-DFS)
problem: 94. Binary Tree Inorder Traversal (Using Recursion-DFS)
problem: 104. Maximum Depth of Binary Tree (Using Recursion-DFS)
problem: 226. Invert Binary Tree (Using Recursion-DFS)
problem: 112. Path Sum (Using Recursion-DFS)
problem: 100. Same Tree (Using Recursion-DFS)
problem: 572. Subtree of Another Tree(Using Recursion-DFS)
problem: 101. Symmetric Tree (Using Recursion-DFS or Using Loop-DFS)
problem: 543. Diameter of Binary Tree (Using Recursion-DFS)


problem: 700. Search in a Binary Search Tree-BST (Using while Loop or Using Recursion -> BST property use) 
problem: 938. Range Sum of BST (Using Recursion)




----------------------------- MEDIUM --------------------------------
// LeetCode
problem: 1456. Maximum Number of Vowels in a Substring of Given Length (Sliding Window fixed size)
problem: 3. Longest Substring Without Repeating Characters (variable Sliding Window)
problem: 424. Longest Repeating Character Replacement (Using Sliding Window)
problem: 1358. Number of Substrings Containing All Three Characters (Using Sliding Window / Using SW + Prefix)
problem: 1248. Count Number of Nice Subarrays (Using Sliding Window + Prefix)
problem: 1004. Max Consecutive Ones III(Using Sliding Window)(Sliding Window learn from here) // find length of maximum subarray with atmost k 0's
problem: 904. Fruit Into Baskets(Using Sliding Window) // find length of maximum subarray with atmost k distinct elements
problem: 75. Sort Colors (Multiple pointers concept)
problem: 167. Two Sum II - Input Array Is Sorted (Two pointers / Binary Search)
problem: 1823. Find the Winner of the Circular Game (Using Recursion)
problem: 50. Pow(x, n) (using Recursion)
problem: 881. Boats to Save People (Two pointers)
problem:2491.Divide Players Into Teams of Equal Skill(using Two pointers/using frequency counter(Map))(fc-learn here) 
problem: 912. Sort an Array (Using Quick Sort Algorithm) (concept code Quick Sort)
problem: 560. Subarray Sum Equals K (Using Prefix Sum concept)
problem: 442. Find All Duplicates in an Array (Using Negative elements concept)
problem: 287. Find the Duplicate Number[in an Array] (using "Cycle Detection" algorithm)
problem: 162. Find Peak Element (Using Binary Search Algorithm with modification)
problem: 33. Search in Rotated Sorted Array (Using Binary Search Algorithm with modification)
problem: 34. Find First and Last Position of Element in Sorted Array (Using Binary Search Two Times)
problem: 540. Single Element in a Sorted Array (Using Binary Search with modification)
problem: 875. Koko Eating Bananas (Using Binary Search)
problem: 2187. Minimum Time to Complete Trips (Using Binary Search)
problem: 74. Search a 2D Matrix (Using Binary Search)
problem: 36. Valid Sudoku (Using Set & Matrix concept)
problem: 53. Maximum Subarray (Using Kadane's algorithm )
problem: 46. Permutations (Using Backtracking)
problem: 15. 3Sum (Using Three pointers)
problem: 122. Best Time to Buy and Sell Stock II (Using DP)
problem: 2. Add Two Numbers - Linked List (Using Recursion)
problem: 24. Swap Nodes in Pairs - Linked List(Using Recursion)[variant Hard 25]
problem: 394. Decode String (Using Stack)
problem: 503. Next Greater Element II (Using Stack or Array)[variant for 496 EASY]
problem: 739. Daily Temperatures (Using Stack or Array)[kind of similar as 503]
problem: 735. Asteroid Collision (Using Stack)
problem: 2211. Count Collisions on a Road (Using Stack)
problem: 2390. Removing Stars From a String (Using Stack)
problem: 155. Min Stack (Using Stack -> Two Stack use)
problem: 102. Binary Tree Level Order Traversal (Using Loop-BFS / Using Recursion-DFS)
problem: 107. Binary Tree Level Order Traversal II (Using Loop-BFS)
problem: 103. Binary Tree Zigzag Level Order Traversal (Using Loop-BFS)


problem: 98. Validate Binary Search Tree (Using BST concept taking min, max as null)
problem: 701. Insert into a Binary Search Tree (Using Recursion)
problem: 450. Delete Node in a BST (Using Recursion)
problem: 230. Kth Smallest Element in a BST(Using Recursion)
problem: 235. Lowest Common Ancestor of a Binary Search Tree (Using Recursion)
problem: 129. Sum Root to Leaf Numbers (Using Recursion)

problem: 841. Keys and Rooms - Graph (Using BFS)
problem: 200. Number of Islands - Graph (Using DFS-Recursion)

problem: 62. Unique Paths (Using DP)
problem: 300. Longest Increasing Subsequence (Using DP)



----------------------------- HARD --------------------------------
// LeetCode
problem:239 Sliding Window Maximum (Maximum of all subarrays of size k)(Using Sliding Window With Dequeue)
GFG(variant): First negative integer in every window of size k (Using Sliding Window With Dequeue) 

problem: 992. Subarrays with K Different Integers(Using Sliding Window)(consider- [count of subarray with Atmost K Different Integers - count of subarray with Atmost K-1 Different Integers])

problem: 25. Reverse Nodes in k-Group - Linked List (Using Recursion) [variant for medium 24]

problem: 42. Trapping Rain Water (Using Stack)


Adding here by git bash
